diff --git a/include/server.h b/include/server.h
index 78ea5d7..986a8c3 100644
--- a/include/server.h
+++ b/include/server.h
@@ -27,6 +27,7 @@
 #define DEFAULT_FRAMERATE "25"
 #define DEFAULT_WIDTH "1280"
 #define DEFAULT_HEIGHT "720"
+#define DEFAULT_BITRATE "2000"
 #define DEFAULT_TIME_ENABLED false
 #define DEFAULT_DIGEST_ENABLED false
 #define DEFAULT_GST_PIPELINE ""
@@ -48,6 +49,7 @@ typedef struct s_config {
   // Encoding
   std::string framerate;
   std::pair<std::string, std::string> scale;
+  std::string bitrate;
 
   // Options
   bool time;
diff --git a/src/parsing.cpp b/src/parsing.cpp
index 1ebf8ce..676c893 100644
--- a/src/parsing.cpp
+++ b/src/parsing.cpp
@@ -72,6 +72,12 @@ void parse_env(std::shared_ptr<t_config> &config) {
     }
   }
 
+  // Bitrate
+  config->bitrate = DEFAULT_BITRATE;
+  if (const char *bitrate = std::getenv("RTSP_BITRATE")) {
+    config->bitrate = bitrate;
+  }
+
   // Input
   config->input = DEFAULT_INPUT;
   if (const char *input = std::getenv("INPUT")) {
@@ -109,7 +115,7 @@ void parse_env(std::shared_ptr<t_config> &config) {
 bool parse_args(std::shared_ptr<t_config> &config, int argc, char **argv) {
   int c;
   opterr = 0;
-  while ((c = getopt(argc, argv, "r:u:l:p:b:f:s:i:g:ht")) != -1) {
+  while ((c = getopt(argc, argv, "r:u:l:p:b:f:s:i:g:e:ht")) != -1) {
     switch (c) {
     case 'r': // Route
       if (optarg && optarg[0] == '-') {
@@ -173,6 +179,13 @@ bool parse_args(std::shared_ptr<t_config> &config, int argc, char **argv) {
       config->scale.second = scale.substr(pos + 1);
       break;
     }
+    case 'e': { // Bitrate
+      if (optarg && optarg[0] == '-') {
+        break;
+      }
+      config->bitrate = optarg;
+      break;
+    }
     case 't': // Time Overlay
       config->time = true;
       break;
@@ -189,14 +202,14 @@ bool parse_args(std::shared_ptr<t_config> &config, int argc, char **argv) {
       fprintf(stdout,
               "Usage: %s [-l address] [-b port] [-r route] [-i "
               "input] [-u username] [-p password] [-f framerate] [-s "
-              "'width'x'height'] [-d] [-t] [-h] [-g gst-pipeline]\n",
+              "'width'x'height'] [-d] [-t] [-h] [-g gst-pipeline] [-e bitrate]\n",
               argv[0]);
       exit(0);
       break;
     case '?':
       if (optopt == 'r' || optopt == 'l' || optopt == 'p' || optopt == 'u' ||
           optopt == 'i' || optopt == 'a' || optopt == 'b' || optopt == 'f' ||
-          optopt == 's' || optopt == 'g') {
+          optopt == 's' || optopt == 'g' || optopt == 'e') {
         fprintf(stderr, "Option -%c requires an argument.\n", optopt);
       } else if (isprint(optopt)) {
         fprintf(stderr, "Unknown option `-%c'.\n", optopt);
diff --git a/src/pipeline.cpp b/src/pipeline.cpp
index db471e5..878cbaa 100644
--- a/src/pipeline.cpp
+++ b/src/pipeline.cpp
@@ -35,6 +35,7 @@ std::string time_overlay(std::shared_ptr<t_config> &config) {
 std::string encode(std::shared_ptr<t_config> &config) {
   std::cout << "H264 encoding with:" << std::endl
             << "Framerate:\t" << config->framerate << std::endl
+            << "Bitrate:\t" << config->bitrate << std::endl
             << "Resolution:\t" << config->scale.first << "x"
             << config->scale.second << std::endl
             << std::endl;
@@ -52,6 +53,8 @@ std::string encode(std::shared_ptr<t_config> &config) {
   launchCmd += " ! amlvenc";
   launchCmd += " framerate=";
   launchCmd += config->framerate;
+  launchCmd += " bitrate=";
+  launchCmd += config->bitrate;
 
   return launchCmd;
 }
